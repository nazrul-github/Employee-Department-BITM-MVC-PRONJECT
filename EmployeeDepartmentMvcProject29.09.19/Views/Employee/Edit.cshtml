@using EmployeeDepartmentMvcProject29._09._19.Models
@model EmployeeDepartmentMvcProject29._09._19.Models.Employee
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Employee employee = Model;
    IEnumerable<Department> aldepartment = ViewBag.Department;
    bool isExist = ViewBag.NidExist2;
}

<h2>Edit Employee Information</h2>

@if (@isExist)
{<div>
        <p class="alert alert-danger">Employee NID already Exist</p>
    </div>
}

<hr />
<form method="post" id="editForm">
    <div class="form-group">
        <label for="employeeName">Employee Name</label>
        <input type="text" id="employeeName" name="Name" class="form-control" value="@employee.Name" />
    </div>
    <div class="form-group">
        <label for="employeeDesignation">Designation</label>
        <input type="text" id="employeeDesignation" class="form-control" value="@employee.Designation" name="Designation" />
    </div>
    <div class="form-group">
        <label for="employeeNID">NID</label>
        <input type="text" id="employeeNID" class="form-control" value="@employee.NID" name="NID" />
    </div>
    <div class="form-group">
        <label for="employeeJoiningDate">Joining Date</label>
        <input type="text" id="employeeJoiningDate" class="form-control" value="@employee.JoiningDate" name="JoiningDate" />
    </div>
    <div class="form-group">
        <label for="employeeDepartmentId">Department</label>
        <select name="DepartmentId" id="employeeDepartmentId" class="form-control">
            <option value="0">--Select Department--</option>
            @foreach (var adepartment in aldepartment)
            {
                <option selected="@employee.DepartmentId" value="@adepartment.DepartmentId">@adepartment.DepartmentName</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="employeeBloodGroup">Blood Group</label>
        @Html.DropDownList("BloodGroup",new List<SelectListItem>()
        {
            new SelectListItem(){Text = "A+",Value = "A+"},
            new SelectListItem(){Text = "A-",Value = "A-"},
            new SelectListItem(){Text = "B+",Value = "B+"},
            new SelectListItem(){Text = "B-",Value = "b-"},
            new SelectListItem(){Text = "O-",Value = "O-"},
            new SelectListItem(){Text = "O+",Value = "O+"},
            new SelectListItem(){Text = "AB+",Value = "AB+"},
            new SelectListItem(){Text = "AB-",Value = "AB-"},
        },"--Select BloodGroup--",new{@class = "form-control",@id= "employeeBloodGroup" })
    </div>
    <input type="hidden" name="EmployeeId" value="@employee.EmployeeId" />
    <input type="submit" class="btn btn-success" />
</form>
@Html.ActionLink("Go to employee list", "Index")

@section scripts
{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        $(function() {
            $("#employeeJoiningDate").datepicker({
                dateFormat: "dd / mm / yy",
            changeMonth: true,
                changeYear: true
        });
        });
    </script>
    <script>
        $(document).ready(function () {
                $("#editForm").validate({
                    rules: {
                        Name: { required: true, number: false },
                        Designation: { required: true },
                        NID: {
                            required: true,
                            minlength: 16
                        },
                        JoiningDate: {
                            required: true,
                            date: true
                        },
                        DepartmentId: {
                            min: 1
                        },
                        BloodGroup: {
                            min: ""
                        }

                    },
                    messages: {
                        Name: { required:"Name is required",number:"Please enter a valid name"},
                    Designation: { require: "Designation is required" },
                    NID: {
                        required: "Nid is required",
                        minlength: "NID must be 16 character"
                    },
                    JoiningDate: {
                        required: "Joining date is required"

                    },
                    DepartmentId: {
                        min: "Pleased select department"
                    },
                    BloodGroup: {
                        min: "Please select Blood Group"
                    }
                }
            });
        })
    </script>
}